version: "3.7"

services:
  census3:
    # image: ghcr.io/vocdoni/census3:master
    env_file: ".env"
    build: 
      context: ../../
      args:
        SQLC_MIGRATIONS: ${SQLC_MIGRATIONS}
    ports:
      - ${PORT}:${PORT}
    sysctls:
      net.core.somaxconn: 8128
    volumes:
      - census3:/app/data
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres
    command:
      - "--url=${WEB3_PROVIDER}"
      - "--port=${PORT}"
      - "--logLevel=${LOGLEVEL}"
      - "--dbEngine=postgres"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.census3.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.census3.entrypoints=websecure"
      - "traefik.http.routers.census3.tls.certresolver=le"
      - "traefik.http.routers.census3.service=census3"
      - "traefik.http.services.census3.loadbalancer.server.port=${PORT}"

  postgres:
    image: postgres:15.2-alpine
    env_file: ".env"
    volumes:
      - database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # traefik:
  #   image: traefik:2.10.1
  #   ports:
  #     - 80:80
  #     - 443:443
  #   volumes:
  #     - "./letsencrypt:/letsencrypt"
  #     - "/var/run/docker.sock:/var/run/docker.sock:ro"
  #   command:
  #     - "--log.level=DEBUG"
  #     - "--providers.docker=true"
  #     - "--providers.docker.exposedbydefault=false"
  #     - "--entrypoints.web.address=:80"
  #     - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
  #     - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
  #     - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
  #     - "--entrypoints.websecure.address=:443"
  #     - "--certificatesresolvers.le.acme.httpchallenge=true"
  #     - "--certificatesresolvers.le.acme.httpchallenge.entrypoint=web"
  #     - "--certificatesresolvers.le.acme.email=email@foo.bar"
  #     - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
  #   restart: always
  # TODO: Include wathctower
  # watchtower:
  #   image: containrrr/watchtower
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   labels:
  #     - com.centurylinklabs.watchtower.enable="false"
  #   command: --interval 30 --cleanup

volumes:
  census3: {}
  database: {}
  # traefik: {}

